<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.blf2.dao.IClassDao">
    <resultMap id="ClassInfoResultMap" type="net.blf2.entity.ClassInfo">
        <id property="classId" column="classId"/>
        <result property="majorName" column="majorName" />
        <result property="classGrade" column="classGrade"/>
        <result property="classNum" column="classNum"/>
        <result property="classNote" column="classNote" />
        <association property="monitorInfo" column="monitorId" resultMap="UserInfoResultMap"
                     javaType="net.blf2.entity.UserInfo" />
    </resultMap>
    <resultMap id="UserInfoResultMap" type="net.blf2.entity.UserInfo">
        <id property="userId" column="userId"/>
        <result property="userNum" column="userNum"/>
        <result property="userPswd" column="userPswd"/>
        <result property="userPhone" column="userPhone"/>
        <result property="userNote" column="userNote"/>
        <association property="userRole" column="userRoleId"
                     javaType="net.blf2.entity.UserRoleInfo" resultMap="UserRoleInfoResultMap"/>
    </resultMap>
    <resultMap id="UserRoleInfoResultMap" type="net.blf2.entity.UserRoleInfo">
        <id property="roleId" column="roleId" />
        <result property="roleName" column="roleName"/>
        <result property="roleRule" column="roleRule"/>
        <result property="roleNote" column="roleNote"/>
    </resultMap>

    <sql id="ClassInfoColumns">
        ClassInfo.classId,ClassInfo.majorName,ClassInfo.classGrade,ClassInfo.classNum,ClassInfo.classNote
    </sql>

    <sql id="UserInfoColumns">
        UserInfo.userId,UserInfo.userNum,UserInfo.userPswd,UserInfo.userPhone,UserInfo.userGrade,UserInfo.userNote
    </sql>

    <sql id="UserRoleInfoColumns">
        UserRoleInfo.roleId,UserRoleInfo.roleName,UserRoleInfo.roleRule,UserRoleInfo.roleNote
    </sql>

    <sql id="JoinIn">
        FROM ClassInfo
        LEFT OUTER JOIN UserInfo ON ClassInfo.monitorId = UserInfo.userId
        LEFT OUTER JOIN UserRoleInfo ON UserInfo.userRoleId = UserRoleInfo.roleId
    </sql>

    <sql id="insertClassInfoColumns">
        classId,majorName,classGrade,classNum,monitorId,classNote
    </sql>

    <select id="queryClassInfoByClassId" resultMap="ClassInfoResultMap" parameterType="String"
            statementType="PREPARED">
        SELECT
          <include refid="ClassInfoColumns"/>,
          <include refid="UserInfoColumns" />,
          <include refid="UserRoleInfoColumns" />
          <include refid="JoinIn" />
        WHERE
          ClassInfo.classId = #{classId}
    </select>

    <select id="queryClassInfoAll" statementType="PREPARED" parameterType="String"
            resultMap="ClassInfoResultMap">
        SELECT
        <include refid="ClassInfoColumns"/>,
        <include refid="UserInfoColumns" />,
        <include refid="UserRoleInfoColumns" />
        <include refid="JoinIn" />
    </select>

    <insert id="insertClassInfo">
        INSERT INTO ClassInfo(
          <include refid="insertClassInfoColumns" />
        )
        VALUES(
        #{classId},#{majorName},#{classGrade},#{classNum},#{monitorInfo.userId},#{classNote}
        )
    </insert>

    <update id="updateClassInfo" statementType="PREPARED" flushCache="true" timeout="20000">
        UPDATE
          ClassInfo
        <trim prefix="set" suffixOverrides=",">
            <if test="majorName != null">
                majorName = #{majorName},
            </if>
            <if test="classGrade != null">
                classGrade = #{classGrade},
            </if>
            <if test="classNum != null">
                classNum = #{classNum},
            </if>
            <if test="monitorInfo.userId != null">
                monitorId = #{monitorInfo.userId},
            </if>
            <if test="classNote != null">
                classNote = #{classNote}
            </if>
        </trim>
        WHERE
          classId = #{classId}
    </update>

    <delete id="deleteClassInfoByClassId" flushCache="true" parameterType="String"
            statementType="PREPARED" timeout="20000">
        DELETE FROM ClassInfo WHERE classId = #{classId}
    </delete>
</mapper>